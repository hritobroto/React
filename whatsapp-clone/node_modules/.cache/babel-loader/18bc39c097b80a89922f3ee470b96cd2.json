{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hritobroto\\\\Documents\\\\ReactApps\\\\whatsapp-clone\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, IconButton } from '@material-ui/core';\nimport { AttachFile, InsertEmoticon, Message, SearchOutlined } from '@material-ui/icons';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport MicIcon from '@material-ui/icons/Mic';\nimport userEvent from '@testing-library/user-event';\nimport React, { useEffect, useState } from 'react';\nimport './Chat.css';\nimport { Link, useParams } from \"react-router-dom\";\nimport db from './firebase';\nimport { useStateValue } from './StateProvider';\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  var _messages, _messages$timestamp;\n\n  const [input, setInput] = useState('');\n  const [seed, setSeed] = useState('');\n  const {\n    roomId\n  } = useParams();\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [{\n    user\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    if (roomId) {\n      db.collection('rooms').doc(roomId).onSnapshot(snapshot => setRoomName(snapshot.data().name));\n      db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n\n    ;\n  }, [roomId]);\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, [roomId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    console.log('You typed>>', input);\n    db.collection('rooms').doc(roomId).collection('messages').add({\n      message: input,\n      name: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `https://i.pravatar.cc/150?u=${seed}`,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: `https://i.pravatar.cc/150?u=${seed}.svg`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__headerInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" last seen\", new Date((_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : (_messages$timestamp = _messages.timestamp) === null || _messages$timestamp === void 0 ? void 0 : _messages$timestamp.toDateString()).toUTCString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__headerRight\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__body\",\n      children: messages.map(message => {\n        var _message$timestamp;\n\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `chat__message \n                    ${message.name === user.displayName && \"chat__receiver\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat__name\",\n            children: message.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), message.message, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat__timestamp\",\n            children: new Date((_message$timestamp = message.timestamp) === null || _message$timestamp === void 0 ? void 0 : _message$timestamp.toDateString()).toUTCString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__footer\",\n      children: [/*#__PURE__*/_jsxDEV(InsertEmoticon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \" Type a message\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          type: \"submit\",\n          children: \"Send a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"NcytU1fbRQjKwEEyOUbO0cr44DM=\", false, function () {\n  return [useParams, useStateValue];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/Hritobroto/Documents/ReactApps/whatsapp-clone/src/Chat.js"],"names":["Avatar","IconButton","AttachFile","InsertEmoticon","Message","SearchOutlined","MoreVert","MicIcon","userEvent","React","useEffect","useState","Link","useParams","db","useStateValue","firebase","Chat","input","setInput","seed","setSeed","roomId","roomName","setRoomName","messages","setMessages","user","dispatch","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","sendMessage","e","preventDefault","console","log","add","message","displayName","timestamp","firestore","FieldValue","serverTimestamp","Date","length","toDateString","toUTCString","target","value"],"mappings":"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","sourcesContent":["import { Avatar, IconButton } from '@material-ui/core'\r\nimport { AttachFile, InsertEmoticon, Message, SearchOutlined } from '@material-ui/icons';\r\nimport MoreVert from '@material-ui/icons/MoreVert';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport userEvent from '@testing-library/user-event';\r\nimport React, {useEffect, useState} from 'react';\r\nimport './Chat.css';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from 'firebase';\r\n\r\nfunction Chat() {\r\n    const [input,setInput] = useState('');\r\n    const [seed, setSeed] = useState('');\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        if(roomId) {\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot =>(\r\n                setRoomName(snapshot.data().name)\r\n            ));\r\n            db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapshot =>\r\n                (\r\n                    setMessages(snapshot.docs.map(doc => doc.data()))\r\n                ))\r\n            };\r\n    },[roomId])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*5000));    \r\n    }, [roomId]);\r\n\r\n   \r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        console.log('You typed>>',input);\r\n    \r\n    db.collection('rooms').doc(roomId).collection('messages').add({\r\n        message: input,\r\n        name: user.displayName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Link to = {`https://i.pravatar.cc/150?u=${seed}`}>\r\n                <Avatar src={`https://i.pravatar.cc/150?u=${seed}.svg`}/>\r\n                </Link>\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p> last seen   \r\n                        {new Date(messages[messages.length-1]?.\r\n                            timestamp?.toDateString()).toUTCString()}\r\n                        </p>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__body\">\r\n                {messages.map(message => (\r\n                    <p className={`chat__message \r\n                    ${message.name === user.displayName && \"chat__receiver\"}`}>\r\n                        <span className=\"chat__name\">\r\n                        {message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat__timestamp\">\r\n                            {new Date(message.timestamp?.toDateString()).toUTCString()}\r\n                        </span>\r\n                    </p>    \r\n                ))}\r\n                \r\n                \r\n            </div>\r\n            <div className=\"chat__footer\">\r\n                <InsertEmoticon />\r\n                <form>\r\n                    <input value={input} onChange={e =>  setInput(e.target.value)} placeholder=\" Type a message\" type=\"text\"/>\r\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}